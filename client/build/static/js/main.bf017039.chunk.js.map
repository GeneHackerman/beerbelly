{"version":3,"sources":["utils/auth.js","utils/API.js","utils/localStorage.js","pages/SearchedBreweries.js","pages/SavedBreweries.js","components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["jwt","require","module","exports","authMiddleware","req","res","next","token","query","headers","authorization","split","pop","trim","status","json","message","data","verify","maxAge","user","console","log","signToken","payload","username","email","_id","sign","expiresIn","getMe","fetch","saveBrewery","breweryData","method","body","JSON","stringify","deleteBrewery","breweryId","removeBreweryId","savedBreweryIds","localStorage","getItem","parse","updatedSavedBreweryIds","filter","savedBreweryId","setItem","SearchBreweries","useState","searchedBreweries","setSearchedBreweries","searchInput","setSearchInput","setSavedBreweryIds","useEffect","breweryIdArr","length","removeItem","handleFormSubmit","event","preventDefault","response","ok","Error","items","map","brewery","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","error","handleSaveBrewery","breweryToSave","find","Auth","loggedIn","getToken","Jumbotron","fluid","className","Container","Form","onSubmit","Row","Col","xs","md","Control","name","value","onChange","e","target","type","size","placeholder","Button","variant","CardColumns","Card","key","border","Img","src","alt","Body","Title","Text","disabled","some","onClick","SavedBreweries","userData","setUserData","userDataLength","Object","keys","getUserData","handleDeleteBrewery","updatedUser","savedBreweries","SignupForm","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","currentTarget","checkValidity","stopPropagation","login","noValidate","Alert","dismissible","onClose","show","Group","Label","htmlFor","required","Feedback","LoginForm","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","to","Toggle","aria-controls","Collapse","Nav","logout","Modal","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Content","Pane","handleModalClose","App","exact","path","component","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf017039.chunk.js","sourcesContent":["const jwt = require('jsonwebtoken');\r\nconst secret = 'mysecretsshhhhh';\r\nconst expiration = '4h';\r\nmodule.exports = {\r\n  authMiddleware: function (req, res, next) {\r\n    let token = req.query.token || req.headers.authorization;\r\n    if (req.headers.authorization) {\r\n      token = token.split(' ').pop().trim();\r\n    }\r\n\r\n    if (!token) {\r\n      return res.status(400).json({ message: 'You have no token!' });\r\n    }\r\n\r\n    try {\r\n      const { data } = jwt.verify(token, secret, { maxAge: expiration });\r\n      req.user = data;\r\n    } catch {\r\n      console.log('Invalid token');\r\n      return res.status(400).json({ message: 'invalid token!' });\r\n    }\r\n\r\n    next();\r\n  },\r\n  signToken: function ({ username, email, _id }) {\r\n    const payload = { username, email, _id };\r\n\r\n    return jwt.sign({ data: payload }, secret, { expiresIn: expiration });\r\n  },\r\n\r\n  \r\n\r\n};\r\n","export const getMe = (token) => {\r\n  return fetch('/api/users/me', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createUser = (userData) => {\r\n  return fetch('/api/users', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return fetch('/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const saveBrewery = (breweryData, token) => {   \r\n  return fetch('/api/users', {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(breweryData),\r\n  });\r\n};\r\n\r\n\r\nexport const deleteBrewery = (breweryId, token) => {  \r\n  return fetch(`/api/users/breweries/${breweryId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n\r\nexport const searchBreweries = (query) => {\r\n  return fetch(`https://api.openbrewerydb.org/breweries?by_city=${query}`); // make a search to \" xyz........\"  api\r\n};\r\n","export const getSavedBreweryIds = () => {\r\n  const savedBreweryIds = localStorage.getItem('saved_breweries')\r\n    ? JSON.parse(localStorage.getItem('saved_breweries'))\r\n    : [];\r\n\r\n  return savedBreweryIds;\r\n};\r\n\r\nexport const saveBreweryIds = (breweryIdArr) => {\r\n  if (breweryIdArr.length) {\r\n    localStorage.setItem('saved_breweries', JSON.stringify(breweryIdArr));\r\n  } else {\r\n    localStorage.removeItem('saved_breweries');\r\n  }\r\n};\r\n\r\nexport const removeBreweryId = (breweryId) => {\r\n  const savedBreweryIds = localStorage.getItem('saved_breweries')\r\n    ? JSON.parse(localStorage.getItem('saved_breweries'))\r\n    : null;\r\n\r\n  if (!savedBreweryIds) {\r\n    return false;\r\n  }\r\n\r\n  const updatedSavedBreweryIds = savedBreweryIds?.filter((savedBreweryId) => savedBreweryId !== breweryId);\r\n  localStorage.setItem('saved_breweries', JSON.stringify(updatedSavedBreweryIds));\r\n\r\n  return true;\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBrewery, searchBreweries } from '../utils/API';  \r\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\r\nconst SearchBreweries = () => {\r\n \r\n  // create state for holding returned google api data\r\n  const [searchedBreweries, setSearchedBreweries] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved breweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n\r\n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBreweryIds(savedBreweryIds);\r\n  });\r\n\r\n  // create method to search for drinks and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchBreweries(searchInput); \r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n      const breweryData = items.map((brewery) => ({\r\n        breweryId: brewery.id,\r\n        authors: brewery.volumeInfo.authors || ['No Breweries to display'],\r\n        title: brewery.volumeInfo.title,\r\n        description: brewery.volumeInfo.description,\r\n        image: brewery.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBreweries(breweryData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n \r\n  const handleSaveBrewery = async (breweryId) => {\r\n\r\n    const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBrewery(breweryToSave, token);\r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      // if brewery successfully saves to user's account, save brewery id to state\r\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Breweries!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a Brewery'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing ${searchedBreweries.length} results:`\r\n            : 'Search for a Brewery to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? (\r\n                  <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBrewery(brewery.breweryId)}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved to your Favorite Breweries!'\r\n                        : 'Save this Brewery to your favorites!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport { getMe, deleteBrewery } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport { removeBreweryId } from '../utils/localStorage';\r\nconst SavedBreweries = () => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n \r\n  const userDataLength = Object.keys(userData).length;\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json();\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the brewery's mongo _id value as param and deletes the brewery from the database\r\n  const handleDeleteBrewery = async (breweryId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteBrewery(breweryId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove drink's id from localStorage\r\n      removeBreweryId(breweryId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved Breweries!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBreweries.length\r\n            ? `Viewing ${userData.savedBreweries.length} saved ${userData.savedBreweries.length === 1 ? 'brewery' : 'breweries'}:`\r\n            : 'You have no saved drinks!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBrewery(brewery.breweryId)}>\r\n                    Delete this Brewery!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBreweries;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { createUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nconst SignupForm = () => {\r\n\r\n  \r\n\r\n  const [userFormData, setUserFormData] = useState({ username: '', email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await createUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your signup!\r\n        </Alert>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='username'>Username</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your username'\r\n            name='username'\r\n            onChange={handleInputChange}\r\n            value={userFormData.username}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Your username is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='Your email address'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Your email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'> Your password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.username && userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignupForm;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\nimport { loginUser } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nconst LoginForm = () => {\r\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\r\n  const [validated] = useState(false);\r\n  const [showAlert, setShowAlert] = useState(false);\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setUserFormData({ ...userFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const response = await loginUser(userFormData);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const { token, user } = await response.json();\r\n      console.log(user);\r\n      Auth.login(token);\r\n      localStorage.setItem('JWT', token)\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setUserFormData({\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Incorrect login credentials. Please try again.\r\n        </Alert>\r\n        <Form.Group>\r\n          <Form.Label htmlFor='email'>Email</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Your email'\r\n            name='email'\r\n            onChange={handleInputChange}\r\n            value={userFormData.email}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Your email is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='password'>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='Your password'\r\n            name='password'\r\n            onChange={handleInputChange}\r\n            value={userFormData.password}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Your password is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Button\r\n          disabled={!(userFormData.email && userFormData.password)}\r\n          type='submit'\r\n          variant='success'>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\nimport Auth from '../utils/auth';\r\nconst AppNavbar = () => {\r\n  // drink\r\n  const [showModal, setShowModal] = useState(false);  // set modal display state\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            Google drinks Search\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              <Nav.Link as={Link} to='/'>\r\n                Search For drinks\r\n              </Nav.Link>\r\n              {/* if user is logged in show saved drinks and logout */}\r\n             {/* \r\n             {Auth.loggedIn() ? (\r\n            */}\r\n            {localStorage.getItem('JWT') != null ?\r\n            (\r\n                <>\r\n                  <Nav.Link as={Link} to='/saved'>\r\n                    See Your drinks\r\n                  </Nav.Link>\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport SearchBreweries from './pages/SearchedBreweries';\nimport SavedBreweries from './pages/SavedBreweries';\nimport Navbar from './components/Navbar';\nfunction App() {\n  return (\n    <Router>\n      <>\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={SearchBreweries} />\n          <Route exact path='/saved' component={SavedBreweries} />\n          <Route render={() => <h1 className='display-2'>Ops! Wrong page!</h1>} />\n        </Switch>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from 'react-dom';\n\n//const root = ReactDOM.createRoot(document.getElementById('root'));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}