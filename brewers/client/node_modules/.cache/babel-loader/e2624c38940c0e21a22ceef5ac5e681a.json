{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,Col,Form,Button,Card,CardColumns}from'react-bootstrap';import Auth from'../utils/auth';import{saveBrewery,searchBreweries}from'../utils/API';import{saveBreweryIds,getSavedBreweryIds}from'../utils/localStorage';var SearchBreweries=function SearchBreweries(){// create state for holding returned google api data\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),searchedBreweries=_useState2[0],setSearchedBreweries=_useState2[1];// create state for holding our search field data\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchInput=_useState4[0],setSearchInput=_useState4[1];// create state to hold saved drinkId values\nvar _useState5=useState(getSavedBreweryIds()),_useState6=_slicedToArray(_useState5,2),savedBreweryIds=_useState6[0],setSavedBreweryIds=_useState6[1];// set up useEffect hook to save `savedDrinkIds` list to localStorage on component unmount\n// learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\nuseEffect(function(){return function(){return saveBreweryIds(savedBreweryIds);};});// create method to search for drinks and set state on form submit\nvar handleFormSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var response,_yield$response$json,items,breweryData;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(searchInput){_context.next=3;break;}return _context.abrupt(\"return\",false);case 3:_context.prev=3;_context.next=6;return searchBreweries(searchInput);case 6:response=_context.sent;if(response.ok){_context.next=9;break;}throw new Error('Ops! Something went wrong!');case 9:_context.next=11;return response.json();case 11:_yield$response$json=_context.sent;items=_yield$response$json.items;breweryData=items.map(function(brewery){var _drink$volumeInfo$ima;return{breweryId:brewery.id,authors:brewery.volumeInfo.authors||['No Breweries to display'],title:brewery.volumeInfo.title,description:brewery.volumeInfo.description,image:((_drink$volumeInfo$ima=drink.volumeInfo.imageLinks)===null||_drink$volumeInfo$ima===void 0?void 0:_drink$volumeInfo$ima.thumbnail)||''};});setSearchedBreweries(breweryData);setSearchInput('');_context.next=21;break;case 18:_context.prev=18;_context.t0=_context[\"catch\"](3);console.error(_context.t0);case 21:case\"end\":return _context.stop();}}},_callee,null,[[3,18]]);}));return function handleFormSubmit(_x){return _ref.apply(this,arguments);};}();var handleSaveBrewery=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(breweryId){var breweryToSave,token,response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:breweryToSave=searchedBrewery.find(function(brewery){return brewery.breweryId===breweryId;});// get token\ntoken=Auth.loggedIn()?Auth.getToken():null;if(token){_context2.next=4;break;}return _context2.abrupt(\"return\",false);case 4:_context2.prev=4;_context2.next=7;return saveBrewery(breweryToSave,token);case 7:response=_context2.sent;if(response.ok){_context2.next=10;break;}throw new Error('Ops! Something went wrong!');case 10:// if drink successfully saves to user's account, save drink id to state\nsetSavedBreweryIds([].concat(_toConsumableArray(savedBreweryIds),[breweryToSave.breweryId]));_context2.next=16;break;case 13:_context2.prev=13;_context2.t0=_context2[\"catch\"](4);console.error(_context2.t0);case 16:case\"end\":return _context2.stop();}}},_callee2,null,[[4,13]]);}));return function handleSaveBrewery(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Search for Breweries!\"),/*#__PURE__*/React.createElement(Form,{onSubmit:handleFormSubmit},/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Col,{xs:12,md:8},/*#__PURE__*/React.createElement(Form.Control,{name:\"searchInput\",value:searchInput,onChange:function onChange(e){return setSearchInput(e.target.value);},type:\"text\",size:\"lg\",placeholder:\"Search for a Brewery\"})),/*#__PURE__*/React.createElement(Col,{xs:12,md:4},/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"success\",size:\"lg\"},\"Submit Search\")))))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,searchDrinks.length?\"Viewing \".concat(searchedBreweries.length,\" results:\"):'Search for a Brewery to begin'),/*#__PURE__*/React.createElement(CardColumns,null,searchedBreweries.map(function(brewery){return/*#__PURE__*/React.createElement(Card,{key:brewery.breweryId,border:\"dark\"},brewery.image?/*#__PURE__*/React.createElement(Card.Img,{src:drink.image,alt:\"The cover for \".concat(brewery.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,brewery.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",brewery.authors),/*#__PURE__*/React.createElement(Card.Text,null,brewery.description),Auth.loggedIn()&&/*#__PURE__*/React.createElement(Button,{disabled:savedBreweryIds===null||savedBreweryIds===void 0?void 0:savedBreweryIds.some(function(savedBreweryId){return savedBreweryId===brewery.breweryId;}),className:\"btn-block btn-info\",onClick:function onClick(){return handleSaveBrewery(brewery.breweryId);}},(savedBreweryIds===null||savedBreweryIds===void 0?void 0:savedBreweryIds.some(function(savedBreweryId){return savedBreweryId===brewery.breweryId;}))?'This Brewery has already been saved to your Favorite Breweries!':'Save this Brewery to your favorites!')));}))));};export default SearchBreweries;","map":{"version":3,"sources":["C:/Users/drmic/desktop/myrepo/beerbelly/brewers/client/src/pages/SearchedBreweries.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBrewery","searchBreweries","saveBreweryIds","getSavedBreweryIds","SearchBreweries","searchedBreweries","setSearchedBreweries","searchInput","setSearchInput","savedBreweryIds","setSavedBreweryIds","handleFormSubmit","event","preventDefault","response","ok","Error","json","items","breweryData","map","brewery","breweryId","id","authors","volumeInfo","title","description","image","drink","imageLinks","thumbnail","console","error","handleSaveBrewery","breweryToSave","searchedBrewery","find","token","loggedIn","getToken","e","target","value","searchDrinks","length","some","savedBreweryId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBrewery, searchBreweries } from '../utils/API';  \r\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\r\nconst SearchBreweries = () => {\r\n \r\n  // create state for holding returned google api data\r\n  const [searchedBreweries, setSearchedBreweries] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved drinkId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n\r\n  // set up useEffect hook to save `savedDrinkIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBreweryIds(savedBreweryIds);\r\n  });\r\n\r\n  // create method to search for drinks and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchBreweries(searchInput); \r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n      const breweryData = items.map((brewery) => ({\r\n        breweryId: brewery.id,\r\n        authors: brewery.volumeInfo.authors || ['No Breweries to display'],\r\n        title: brewery.volumeInfo.title,\r\n        description: brewery.volumeInfo.description,\r\n        image: drink.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBreweries(breweryData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n \r\n  const handleSaveBrewery = async (breweryId) => {\r\n\r\n    const breweryToSave = searchedBrewery.find((brewery) => brewery.breweryId === breweryId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBrewery(breweryToSave, token);\r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      // if drink successfully saves to user's account, save drink id to state\r\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Breweries!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a Brewery'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchDrinks.length\r\n            ? `Viewing ${searchedBreweries.length} results:`\r\n            : 'Search for a Brewery to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? (\r\n                  <Card.Img src={drink.image} alt={`The cover for ${brewery.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBrewery(brewery.breweryId)}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved to your Favorite Breweries!'\r\n                        : 'Save this Brewery to your favorites!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n\r\n"]},"metadata":{},"sourceType":"module"}