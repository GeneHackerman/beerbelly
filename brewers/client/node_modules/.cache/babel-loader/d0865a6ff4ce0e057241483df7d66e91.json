{"ast":null,"code":"var _jsxFileName = \"/Users/coopersmith/Desktop/class-challenges/beerbelly/brewers/client/src/pages/SearchedBreweries.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBrewery, searchBreweries } from '../utils/API';\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\n\nconst SearchBreweries = () => {\n  // create state for holding returned google api data\n  const [searchedBreweries, setSearchedBreweries] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(''); // create state to hold saved breweryId values\n\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds()); // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBreweryIds(savedBreweryIds);\n  }); // create method to search for drinks and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchBreweries(searchInput);\n\n      if (!response.ok) {\n        throw new Error('Ops! Something went wrong!');\n      }\n\n      const items = await response.json();\n      console.log(items);\n      const breweryData = items.map(brewery => ({\n        breweryId: brewery.id,\n        brewery_type: brewery.brewery_type || ['No Breweries to display'],\n        name: brewery.name,\n        website_url: brewery.website_url\n      }));\n      setSearchedBreweries(breweryData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSaveBrewery = async breweryId => {\n    const breweryToSave = searchedBreweries.find(brewery => brewery.breweryId === breweryId); // get token\n    // const token = Auth.loggedIn() ? Auth.getToken() : null;\n    // if (!token) {\n    //   return false;\n    // }\n    // try {\n    //   const response = await saveBrewery(breweryToSave, token);\n    //   if (!response.ok) {\n    //     throw new Error('Ops! Something went wrong!');\n    //   }\n    // if brewery successfully saves to user's account, save brewery id to state\n    //   setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\n    // } catch (err) {\n    //   console.error(err);\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Search for Breweries!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a Brewery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, searchedBreweries.length ? `Viewing ${searchedBreweries.length} results:` : 'Search for a Brewery to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, searchedBreweries.map(brewery => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: brewery.breweryId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, brewery.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, \"Authors: \", brewery.brewery_type), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, brewery.website_url)));\n  }))));\n};\n\nexport default SearchBreweries;","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBrewery","searchBreweries","saveBreweryIds","getSavedBreweryIds","SearchBreweries","searchedBreweries","setSearchedBreweries","searchInput","setSearchInput","savedBreweryIds","setSavedBreweryIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","console","log","breweryData","map","brewery","breweryId","id","brewery_type","name","website_url","err","error","handleSaveBrewery","breweryToSave","find","e","target","value","length"],"sources":["/Users/coopersmith/Desktop/class-challenges/beerbelly/brewers/client/src/pages/SearchedBreweries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBrewery, searchBreweries } from '../utils/API';  \r\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\r\nconst SearchBreweries = () => {\r\n \r\n  // create state for holding returned google api data\r\n  const [searchedBreweries, setSearchedBreweries] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved breweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n\r\n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBreweryIds(savedBreweryIds);\r\n  });\r\n\r\n  // create method to search for drinks and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchBreweries(searchInput); \r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n\r\n      const items  = await response.json();\r\n      console.log(items)\r\n      const breweryData = items.map((brewery) => ({\r\n        breweryId: brewery.id,\r\n        brewery_type: brewery.brewery_type || ['No Breweries to display'],\r\n        name: brewery.name,\r\n        website_url: brewery.website_url\r\n      }));\r\n\r\n      setSearchedBreweries(breweryData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n \r\n  const handleSaveBrewery = async (breweryId) => {\r\n\r\n    const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\r\n\r\n    // get token\r\n    // const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    // if (!token) {\r\n    //   return false;\r\n    // }\r\n\r\n    // try {\r\n    //   const response = await saveBrewery(breweryToSave, token);\r\n    //   if (!response.ok) {\r\n    //     throw new Error('Ops! Something went wrong!');\r\n    //   }\r\n\r\n      // if brewery successfully saves to user's account, save brewery id to state\r\n    //   setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\r\n    // } catch (err) {\r\n    //   console.error(err);\r\n    // }\r\n  };\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Breweries!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a Brewery'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing ${searchedBreweries.length} results:`\r\n            : 'Search for a Brewery to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {/* {brewery.image ? (\r\n                  <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' />\r\n                ) : null} */}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.name}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.brewery_type}</p>\r\n                  <Card.Text>{brewery.website_url}</Card.Text>\r\n                  {/* {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBrewery(brewery.breweryId)}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved to your Favorite Breweries!'\r\n                        : 'Save this Brewery to your favorites!'}\r\n                    </Button>\r\n                  )} */}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}