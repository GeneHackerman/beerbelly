{"ast":null,"code":"var _jsxFileName = \"/Users/coopersmith/Desktop/class-challenges/beerbelly/brewers/client/src/pages/SearchedBreweries.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBrewery, searchBreweries } from '../utils/API';\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\n\nconst SearchBreweries = () => {\n  // create state for holding returned google api data\n  const [searchedBreweries, setSearchedBreweries] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(''); // create state to hold saved breweryId values\n\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds()); // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBreweryIds(savedBreweryIds);\n  }); // create method to search for drinks and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchBreweries(searchInput);\n\n      if (!response.ok) {\n        throw new Error('Ops! Something went wrong!');\n      }\n\n      const items = await response.json();\n      console.log(items);\n      const breweryData = items.map(brewery => {\n        var _brewery$volumeInfo$i;\n\n        return {\n          breweryId: brewery.id,\n          authors: brewery.volumeInfo.authors || ['No Breweries to display'],\n          title: brewery.volumeInfo.title,\n          description: brewery.volumeInfo.description,\n          image: ((_brewery$volumeInfo$i = brewery.volumeInfo.imageLinks) === null || _brewery$volumeInfo$i === void 0 ? void 0 : _brewery$volumeInfo$i.thumbnail) || ''\n        };\n      });\n      setSearchedBreweries(breweryData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSaveBrewery = async breweryId => {\n    const breweryToSave = searchedBreweries.find(brewery => brewery.breweryId === breweryId); // get token\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBrewery(breweryToSave, token);\n\n      if (!response.ok) {\n        throw new Error('Ops! Something went wrong!');\n      } // if brewery successfully saves to user's account, save brewery id to state\n\n\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Search for Breweries!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a Brewery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, searchedBreweries.length ? `Viewing ${searchedBreweries.length} results:` : 'Search for a Brewery to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, searchedBreweries.map(brewery => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: brewery.breweryId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, brewery.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: brewery.image,\n      alt: `The cover for ${brewery.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 19\n      }\n    }, brewery.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 19\n      }\n    }, \"Authors: \", brewery.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, brewery.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBreweryIds === null || savedBreweryIds === void 0 ? void 0 : savedBreweryIds.some(savedBreweryId => savedBreweryId === brewery.breweryId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBrewery(brewery.breweryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, (savedBreweryIds === null || savedBreweryIds === void 0 ? void 0 : savedBreweryIds.some(savedBreweryId => savedBreweryId === brewery.breweryId)) ? 'This Brewery has already been saved to your Favorite Breweries!' : 'Save this Brewery to your favorites!')));\n  }))));\n};\n\nexport default SearchBreweries;","map":{"version":3,"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBrewery","searchBreweries","saveBreweryIds","getSavedBreweryIds","SearchBreweries","searchedBreweries","setSearchedBreweries","searchInput","setSearchInput","savedBreweryIds","setSavedBreweryIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","console","log","breweryData","map","brewery","breweryId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","error","handleSaveBrewery","breweryToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBreweryId"],"sources":["/Users/coopersmith/Desktop/class-challenges/beerbelly/brewers/client/src/pages/SearchedBreweries.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBrewery, searchBreweries } from '../utils/API';  \r\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\r\nconst SearchBreweries = () => {\r\n \r\n  // create state for holding returned google api data\r\n  const [searchedBreweries, setSearchedBreweries] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved breweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n\r\n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBreweryIds(savedBreweryIds);\r\n  });\r\n\r\n  // create method to search for drinks and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchBreweries(searchInput); \r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n\r\n      const items  = await response.json();\r\n      console.log(items)\r\n      const breweryData = items.map((brewery) => ({\r\n        breweryId: brewery.id,\r\n        authors: brewery.volumeInfo.authors || ['No Breweries to display'],\r\n        title: brewery.volumeInfo.title,\r\n        description: brewery.volumeInfo.description,\r\n        image: brewery.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBreweries(breweryData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n \r\n  const handleSaveBrewery = async (breweryId) => {\r\n\r\n    const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBrewery(breweryToSave, token);\r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      // if brewery successfully saves to user's account, save brewery id to state\r\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n    \r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Breweries!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a Brewery'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing ${searchedBreweries.length} results:`\r\n            : 'Search for a Brewery to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? (\r\n                  <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBrewery(brewery.breweryId)}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved to your Favorite Breweries!'\r\n                        : 'Save this Brewery to your favorites!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}