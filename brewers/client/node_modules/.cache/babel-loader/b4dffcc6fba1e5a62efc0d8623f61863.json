{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drmic\\\\desktop\\\\myrepo\\\\beerbelly\\\\brewers\\\\client\\\\src\\\\pages\\\\SearchedBreweries.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveBrewery, searchBreweries } from '../utils/API';\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\n\nconst SearchBreweries = () => {\n  // create state for holding returned google api data\n  const [searchedBreweries, setSearchedBreweries] = useState([]); // create state for holding our search field data\n\n  const [searchInput, setSearchInput] = useState(''); // create state to hold saved breweryId values\n\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds()); // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\n\n  useEffect(() => {\n    return () => saveBreweryIds(savedBreweryIds);\n  }); // create method to search for drinks and set state on form submit\n\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n\n    if (!searchInput) {\n      return false;\n    }\n\n    try {\n      const response = await searchBreweries(searchInput);\n\n      if (!response.ok) {\n        throw new Error('Ops! Something went wrong!');\n      }\n\n      const {\n        items\n      } = await response.json();\n      const breweryData = items.map(brewery => {\n        var _brewery$volumeInfo$i;\n\n        return {\n          breweryId: brewery.id,\n          authors: brewery.volumeInfo.authors || ['No Breweries to display'],\n          title: brewery.volumeInfo.title,\n          description: brewery.volumeInfo.description,\n          image: ((_brewery$volumeInfo$i = brewery.volumeInfo.imageLinks) === null || _brewery$volumeInfo$i === void 0 ? void 0 : _brewery$volumeInfo$i.thumbnail) || ''\n        };\n      });\n      setSearchedBreweries(breweryData);\n      setSearchInput('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSaveBrewery = async breweryId => {\n    const breweryToSave = searchedBreweries.find(brewery => brewery.breweryId === breweryId); // get token\n\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await saveBrewery(breweryToSave, token);\n\n      if (!response.ok) {\n        throw new Error('Ops! Something went wrong!');\n      } // if brewery successfully saves to user's account, save brewery id to state\n\n\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Search for Breweries!\"), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"searchInput\",\n    value: searchInput,\n    onChange: e => setSearchInput(e.target.value),\n    type: \"text\",\n    size: \"lg\",\n    placeholder: \"Search for a Brewery\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"success\",\n    size: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"Submit Search\")))))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, searchedBreweries.length ? `Viewing ${searchedBreweries.length} results:` : 'Search for a Brewery to begin'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, searchedBreweries.map(brewery => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: brewery.breweryId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, brewery.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: brewery.image,\n      alt: `The cover for ${brewery.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, brewery.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, \"Authors: \", brewery.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, brewery.description), Auth.loggedIn() && /*#__PURE__*/React.createElement(Button, {\n      disabled: savedBreweryIds === null || savedBreweryIds === void 0 ? void 0 : savedBreweryIds.some(savedBreweryId => savedBreweryId === brewery.breweryId),\n      className: \"btn-block btn-info\",\n      onClick: () => handleSaveBrewery(brewery.breweryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, (savedBreweryIds === null || savedBreweryIds === void 0 ? void 0 : savedBreweryIds.some(savedBreweryId => savedBreweryId === brewery.breweryId)) ? 'This Brewery has already been saved to your Favorite Breweries!' : 'Save this Brewery to your favorites!')));\n  }))));\n};\n\nexport default SearchBreweries;","map":{"version":3,"sources":["C:/Users/drmic/desktop/myrepo/beerbelly/brewers/client/src/pages/SearchedBreweries.js"],"names":["React","useState","useEffect","Jumbotron","Container","Col","Form","Button","Card","CardColumns","Auth","saveBrewery","searchBreweries","saveBreweryIds","getSavedBreweryIds","SearchBreweries","searchedBreweries","setSearchedBreweries","searchInput","setSearchInput","savedBreweryIds","setSavedBreweryIds","handleFormSubmit","event","preventDefault","response","ok","Error","items","json","breweryData","map","brewery","breweryId","id","authors","volumeInfo","title","description","image","imageLinks","thumbnail","err","console","error","handleSaveBrewery","breweryToSave","find","token","loggedIn","getToken","e","target","value","length","some","savedBreweryId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, Col, Form, Button, Card, CardColumns } from 'react-bootstrap';\r\nimport Auth from '../utils/auth';\r\nimport { saveBrewery, searchBreweries } from '../utils/API';  \r\nimport { saveBreweryIds, getSavedBreweryIds } from '../utils/localStorage';\r\nconst SearchBreweries = () => {\r\n \r\n  // create state for holding returned google api data\r\n  const [searchedBreweries, setSearchedBreweries] = useState([]);\r\n  // create state for holding our search field data\r\n  const [searchInput, setSearchInput] = useState('');\r\n\r\n  // create state to hold saved breweryId values\r\n  const [savedBreweryIds, setSavedBreweryIds] = useState(getSavedBreweryIds());\r\n\r\n  // set up useEffect hook to save `savedBreweryIds` list to localStorage on component unmount\r\n  // learn more here: https://reactjs.org/docs/hooks-effect.html#effects-with-cleanup\r\n  useEffect(() => {\r\n    return () => saveBreweryIds(savedBreweryIds);\r\n  });\r\n\r\n  // create method to search for drinks and set state on form submit\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!searchInput) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await searchBreweries(searchInput); \r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      const { items } = await response.json();\r\n      const breweryData = items.map((brewery) => ({\r\n        breweryId: brewery.id,\r\n        authors: brewery.volumeInfo.authors || ['No Breweries to display'],\r\n        title: brewery.volumeInfo.title,\r\n        description: brewery.volumeInfo.description,\r\n        image: brewery.volumeInfo.imageLinks?.thumbnail || '',\r\n      }));\r\n\r\n      setSearchedBreweries(breweryData);\r\n      setSearchInput('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n \r\n  const handleSaveBrewery = async (breweryId) => {\r\n\r\n    const breweryToSave = searchedBreweries.find((brewery) => brewery.breweryId === breweryId);\r\n\r\n    // get token\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await saveBrewery(breweryToSave, token);\r\n      if (!response.ok) {\r\n        throw new Error('Ops! Something went wrong!');\r\n      }\r\n\r\n      // if brewery successfully saves to user's account, save brewery id to state\r\n      setSavedBreweryIds([...savedBreweryIds, breweryToSave.breweryId]);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Search for Breweries!</h1>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Row>\r\n              <Col xs={12} md={8}>\r\n                <Form.Control\r\n                  name='searchInput'\r\n                  value={searchInput}\r\n                  onChange={(e) => setSearchInput(e.target.value)}\r\n                  type='text'\r\n                  size='lg'\r\n                  placeholder='Search for a Brewery'\r\n                />\r\n              </Col>\r\n              <Col xs={12} md={4}>\r\n                <Button type='submit' variant='success' size='lg'>\r\n                  Submit Search\r\n                </Button>\r\n              </Col>\r\n            </Form.Row>\r\n          </Form>\r\n        </Container>\r\n      </Jumbotron>\r\n\r\n      <Container>\r\n        <h2>\r\n          {searchedBreweries.length\r\n            ? `Viewing ${searchedBreweries.length} results:`\r\n            : 'Search for a Brewery to begin'}\r\n        </h2>\r\n        <CardColumns>\r\n          {searchedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? (\r\n                  <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' />\r\n                ) : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  {Auth.loggedIn() && (\r\n                    <Button\r\n                      disabled={savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)}\r\n                      className='btn-block btn-info'\r\n                      onClick={() => handleSaveBrewery(brewery.breweryId)}>\r\n                      {savedBreweryIds?.some((savedBreweryId) => savedBreweryId === brewery.breweryId)\r\n                        ? 'This Brewery has already been saved to your Favorite Breweries!'\r\n                        : 'Save this Brewery to your favorites!'}\r\n                    </Button>\r\n                  )}\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchBreweries;\r\n\r\n"]},"metadata":{},"sourceType":"module"}