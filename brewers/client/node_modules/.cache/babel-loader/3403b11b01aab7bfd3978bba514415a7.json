{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\drmic\\\\Desktop\\\\MYREPO\\\\beerbelly\\\\brewers\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Jumbotron,Container,CardColumns,Card,Button}from'react-bootstrap';import{getMe,deleteBrewery}from'../utils/API';import Auth from'../utils/auth';import{removeBreweryId}from'../utils/localStorage';var SavedBreweries=function SavedBreweries(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),userData=_useState2[0],setUserData=_useState2[1];var userDataLength=Object.keys(userData).length;useEffect(function(){var getUserData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var token,response,user;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;token=Auth.loggedIn()?Auth.getToken():null;if(token){_context.next=4;break;}return _context.abrupt(\"return\",false);case 4:_context.next=6;return getMe(token);case 6:response=_context.sent;if(response.ok){_context.next=9;break;}throw new Error('something went wrong!');case 9:_context.next=11;return response.json();case 11:user=_context.sent;setUserData(user);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[0,15]]);}));return function getUserData(){return _ref.apply(this,arguments);};}();getUserData();},[userDataLength]);// create function that accepts the brewery's mongo _id value as param and deletes the brewery from the database\nvar handleDeleteBrewery=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(breweryId){var token,response,updatedUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:token=Auth.loggedIn()?Auth.getToken():null;if(token){_context2.next=3;break;}return _context2.abrupt(\"return\",false);case 3:_context2.prev=3;_context2.next=6;return deleteBrewery(breweryId,token);case 6:response=_context2.sent;if(response.ok){_context2.next=9;break;}throw new Error('something went wrong!');case 9:_context2.next=11;return response.json();case 11:updatedUser=_context2.sent;setUserData(updatedUser);// upon success, remove drink's id from localStorage\nremoveBreweryId(breweryId);_context2.next=19;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](3);console.error(_context2.t0);case 19:case\"end\":return _context2.stop();}}},_callee2,null,[[3,16]]);}));return function handleDeleteBrewery(_x){return _ref2.apply(this,arguments);};}();if(!userDataLength){return/*#__PURE__*/React.createElement(\"h2\",null,\"LOADING...\");}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Jumbotron,{fluid:true,className:\"text-light bg-dark\"},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h1\",null,\"Viewing saved Breweries!\"))),/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(\"h2\",null,userData.savedBreweries.length?\"Viewing \".concat(userData.savedBreweries.length,\" saved \").concat(userData.savedBreweries.length===1?'brewery':'breweries',\":\"):'You have no saved drinks!'),/*#__PURE__*/React.createElement(CardColumns,null,userData.savedBreweries.map(function(brewery){return/*#__PURE__*/React.createElement(Card,{key:brewery.breweryId,border:\"dark\"},brewery.image?/*#__PURE__*/React.createElement(Card.Img,{src:brewery.image,alt:\"The cover for \".concat(brewery.title),variant:\"top\"}):null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,brewery.title),/*#__PURE__*/React.createElement(\"p\",{className:\"small\"},\"Authors: \",brewery.authors),/*#__PURE__*/React.createElement(Card.Text,null,brewery.description),/*#__PURE__*/React.createElement(Button,{className:\"btn-block btn-danger\",onClick:function onClick(){return handleDeleteBrewery(brewery.breweryId);}},\"Delete this Brewery!\")));}))));};export default SavedBreweries;","map":{"version":3,"sources":["C:/Users/drmic/desktop/myrepo/beerbelly/brewers/client/src/pages/SavedBreweries.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","getMe","deleteBrewery","Auth","removeBreweryId","SavedBreweries","userData","setUserData","userDataLength","Object","keys","length","getUserData","token","loggedIn","getToken","response","ok","Error","json","user","console","error","handleDeleteBrewery","breweryId","updatedUser","savedBreweries","map","brewery","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport { getMe, deleteBrewery } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport { removeBreweryId } from '../utils/localStorage';\r\nconst SavedBreweries = () => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n \r\n  const userDataLength = Object.keys(userData).length;\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json();\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the brewery's mongo _id value as param and deletes the brewery from the database\r\n  const handleDeleteBrewery = async (breweryId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteBrewery(breweryId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove drink's id from localStorage\r\n      removeBreweryId(breweryId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved Breweries!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBreweries.length\r\n            ? `Viewing ${userData.savedBreweries.length} saved ${userData.savedBreweries.length === 1 ? 'brewery' : 'breweries'}:`\r\n            : 'You have no saved drinks!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBrewery(brewery.breweryId)}>\r\n                    Delete this Brewery!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SavedBreweries;\r\n"]},"metadata":{},"sourceType":"module"}