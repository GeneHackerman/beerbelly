{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drmic\\\\desktop\\\\myrepo\\\\beerbelly\\\\brewers\\\\client\\\\src\\\\pages\\\\SavedBreweries.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\nimport { getMe, deleteDrink } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { removeDrinkId } from '../utils/localStorage';\n\nconst SavedDrinks = () => {\n  const [userData, setUserData] = useState({});\n  const userDataLength = Object.keys(userData).length;\n  useEffect(() => {\n    const getUserData = async () => {\n      try {\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n        if (!token) {\n          return false;\n        }\n\n        const response = await getMe(token);\n\n        if (!response.ok) {\n          throw new Error('something went wrong!');\n        }\n\n        const user = await response.json();\n        setUserData(user);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    getUserData();\n  }, [userDataLength]); // create function that accepts the brewery's mongo _id value as param and deletes the brewery from the database\n\n  const handleDeleteBrewery = async breweryId => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const response = await deleteBrewery(breweryId, token);\n\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n\n      const updatedUser = await response.json();\n      setUserData(updatedUser); // upon success, remove drink's id from localStorage\n\n      removeBreweryId(breweryId);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (!userDataLength) {\n    return /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 12\n      }\n    }, \"LOADING...\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Jumbotron, {\n    fluid: true,\n    className: \"text-light bg-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Viewing saved Breweries!\"))), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, userData.savedBreweries.length ? `Viewing ${userData.savedBreweries.length} saved ${userData.savedBreweries.length === 1 ? 'brewery' : 'breweries'}:` : 'You have no saved drinks!'), /*#__PURE__*/React.createElement(CardColumns, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, userData.savedBreweries.map(brewery => {\n    return /*#__PURE__*/React.createElement(Card, {\n      key: brewery.breweryId,\n      border: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, brewery.image ? /*#__PURE__*/React.createElement(Card.Img, {\n      src: brewery.image,\n      alt: `The cover for ${brewery.title}`,\n      variant: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 34\n      }\n    }) : null, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, brewery.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 19\n      }\n    }, \"Authors: \", brewery.authors), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, brewery.description), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-block btn-danger\",\n      onClick: () => handleDeleteBrewery(brewery.breweryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, \"Delete this Brewery!\")));\n  }))));\n};\n\nexport default savedBreweries;","map":{"version":3,"sources":["C:/Users/drmic/desktop/myrepo/beerbelly/brewers/client/src/pages/SavedBreweries.js"],"names":["React","useState","useEffect","Jumbotron","Container","CardColumns","Card","Button","getMe","deleteDrink","Auth","removeDrinkId","SavedDrinks","userData","setUserData","userDataLength","Object","keys","length","getUserData","token","loggedIn","getToken","response","ok","Error","user","json","err","console","error","handleDeleteBrewery","breweryId","deleteBrewery","updatedUser","removeBreweryId","savedBreweries","map","brewery","image","title","authors","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Jumbotron, Container, CardColumns, Card, Button } from 'react-bootstrap';\r\nimport { getMe, deleteDrink } from '../utils/API';\r\nimport Auth from '../utils/auth';\r\nimport { removeDrinkId } from '../utils/localStorage';\r\nconst SavedDrinks = () => {\r\n  const [userData, setUserData] = useState({});\r\n\r\n \r\n  const userDataLength = Object.keys(userData).length;\r\n  useEffect(() => {\r\n    const getUserData = async () => {\r\n      try {\r\n        const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n        if (!token) {\r\n          return false;\r\n        }\r\n\r\n        const response = await getMe(token);\r\n        if (!response.ok) {\r\n          throw new Error('something went wrong!');\r\n        }\r\n\r\n        const user = await response.json();\r\n        setUserData(user);\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n\r\n    getUserData();\r\n  }, [userDataLength]);\r\n\r\n  // create function that accepts the brewery's mongo _id value as param and deletes the brewery from the database\r\n  const handleDeleteBrewery = async (breweryId) => {\r\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    if (!token) {\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      const response = await deleteBrewery(breweryId, token);\r\n\r\n      if (!response.ok) {\r\n        throw new Error('something went wrong!');\r\n      }\r\n\r\n      const updatedUser = await response.json();\r\n      setUserData(updatedUser);\r\n      // upon success, remove drink's id from localStorage\r\n      removeBreweryId(breweryId);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n\r\n  if (!userDataLength) {\r\n    return <h2>LOADING...</h2>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Jumbotron fluid className='text-light bg-dark'>\r\n        <Container>\r\n          <h1>Viewing saved Breweries!</h1>\r\n        </Container>\r\n      </Jumbotron>\r\n      <Container>\r\n        <h2>\r\n          {userData.savedBreweries.length\r\n            ? `Viewing ${userData.savedBreweries.length} saved ${userData.savedBreweries.length === 1 ? 'brewery' : 'breweries'}:`\r\n            : 'You have no saved drinks!'}\r\n        </h2>\r\n        <CardColumns>\r\n          {userData.savedBreweries.map((brewery) => {\r\n            return (\r\n              <Card key={brewery.breweryId} border='dark'>\r\n                {brewery.image ? <Card.Img src={brewery.image} alt={`The cover for ${brewery.title}`} variant='top' /> : null}\r\n                <Card.Body>\r\n                  <Card.Title>{brewery.title}</Card.Title>\r\n                  <p className='small'>Authors: {brewery.authors}</p>\r\n                  <Card.Text>{brewery.description}</Card.Text>\r\n                  <Button className='btn-block btn-danger' onClick={() => handleDeleteBrewery(brewery.breweryId)}>\r\n                    Delete this Brewery!\r\n                  </Button>\r\n                </Card.Body>\r\n              </Card>\r\n            );\r\n          })}\r\n        </CardColumns>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default savedBreweries;\r\n"]},"metadata":{},"sourceType":"module"}